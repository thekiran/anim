[{"C:\\Users\\Spark\\code\\anim\\client\\src\\index.js":"1","C:\\Users\\Spark\\code\\anim\\client\\src\\App.js":"2","C:\\Users\\Spark\\code\\anim\\client\\src\\pages\\home.js":"3","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Header.js":"4","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Features.js":"5","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Content.js":"6","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Footer.js":"7","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\TwoColumnContent.js":"8","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\TwoColLeft.js":"9"},{"size":466,"mtime":1610028955777,"results":"10","hashOfConfig":"11"},{"size":423,"mtime":1610203095426,"results":"12","hashOfConfig":"11"},{"size":1684,"mtime":1610203256804,"results":"13","hashOfConfig":"11"},{"size":3020,"mtime":1610203154146,"results":"14","hashOfConfig":"11"},{"size":5494,"mtime":1610042691643,"results":"15","hashOfConfig":"11"},{"size":4721,"mtime":1610014821908,"results":"16","hashOfConfig":"11"},{"size":4432,"mtime":1609869800344,"results":"17","hashOfConfig":"11"},{"size":8583,"mtime":1609954950577,"results":"18","hashOfConfig":"19"},{"size":9451,"mtime":1610014854121,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"c8aubt",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qg15do",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\Spark\\code\\anim\\client\\src\\index.js",[],["43","44"],"C:\\Users\\Spark\\code\\anim\\client\\src\\App.js",[],"C:\\Users\\Spark\\code\\anim\\client\\src\\pages\\home.js",["45","46"],"import React from 'react'\r\n\r\nimport Content from '../components/Content'\r\nimport Features from '../components/Features'\r\nimport Footer from '../components/Footer'\r\nimport Header from '../components/Header'\r\nimport TwoColLeft from '../components/TwoColLeft'\r\n// import TwoColumnContent from '../components/TwoColumnContent'\r\nconst Home = () => {\r\n\t//  const [offsetY, setOffsetY] = React.useState(0)\r\n  // const handleScroll = () => setOffsetY(window.pageYOffset) \r\n\r\n  // React.useEffect(()=>{\r\n  //   window.addEventListener(\"scroll\",handleScroll) \r\n  //   return () => window.removeEventListener(\"scroll\",handleScroll)\r\n  // },[])\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"main\" \r\n        //style={{transform:`translateY(${offsetY * 0.4}px)`}}\r\n        />\r\n          <div className=\"content\" //style={{transform:`translateY(${offsetY * 0.1}px)`}}\r\n          >\r\n            <nav className=\"navbar navbar-expand\">\r\n\t\t\t<div className=\"navbar-cont\">\r\n\t\t<a className=\"navbar-brand\" href=\"#\"> Business Landing Pages</a> \r\n\t\t<div className=\"navbar-collapse\">\r\n\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t<a className=\"nav-link\" href=\"https://thekiran.github.io/money\">Money Trasfer \r\n\t\t\t\t{/* <span className=\"sr-only\">(current)</span> */}\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"nav-item active\">\r\n\t\t\t\t<a className=\"nav-link\" href=\"#\">Beautify</a>\r\n\t\t\t</li> \r\n\t\t\t</ul> \r\n\t\t</div></div>\r\n\t\t</nav>\r\n\t\t\r\n                <Header />  \r\n                <Features />\r\n          </div>\r\n          <Content />\r\n          <TwoColLeft />\r\n          {/* <TwoColumnContent /> */}\r\n          <Footer />\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Header.js",["47"],"import React from 'react'\r\nimport {motion} from 'framer-motion'\r\nimport gsap,{Elastic} from 'gsap'\r\n\r\nimport banner from '../imglg/manlg.svg'\r\n\r\nconst Header = () => {\r\n  React.useEffect(()=>{\r\n    anim()\r\n  })\r\n  const head = React.useRef(null)\r\n  const anim = () => {\r\n    gsap.fromTo(\".head-cont\",{y:300,stagger:0.1,duration:.5,opacity:1},{y:0,duration:.5,stagger:0.1,opacity:1})\r\n    gsap.from(\".head-cont-banner\",{y:300,stagger:0.5,duration:.5})\r\n    gsap.from(\".head-logo\",{scale:0,stagger:0.1,duration:2 }) \r\n    \r\n    // gsap.to(\".head-cont\",{opacity:1})\r\n  }\r\n  // const head = React.useCallback(node=>{\r\n  //   if(node !== null){\r\n  //     setTimeout(() => {\r\n  //       // console.log('rem',node)\r\n  //     node.classList.remove('act')\r\n  //     }, 3000);\r\n  //   }\r\n  // })\r\n    return (\r\n<section \r\n//style={{background:'rgba(0,0,0,0.7)'}} \r\nid=\"header\" \r\n// className=\"act\"ref={head}\r\n >\r\n  <div className=\"container n\">\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n         {/* Logo */}\r\n        <h1><a href=\"/anim\" id=\"logo\"> <span ref={head} className=\"head-logo\">Animated</span> <span className=\"head-logo\">Beauty</span> </a></h1>\r\n         {/* Nav */}\r\n        <nav id=\"nav\">\r\n          <a href=\"/anim\">Homepage</a>\r\n          <a href='/anim'>Three Column</a>\r\n          <a href='/anim'>Two Column #1</a>\r\n          <a href='/anim'>Two Column #2</a>\r\n          <a href='/anim'>One Column</a>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"banner\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 col-12-medium\">\r\n          {/* Banner Copy */}\r\n          <p id=\"head-p\">\r\n           <span className=\"head-cont\">We </span> \r\n           <span className=\"head-cont\">do </span> \r\n           <span className=\"head-cont\">something </span> \r\n           <span className=\"head-cont\">really </span> \r\n           <span className=\"head-cont\">useful, </span> \r\n           <span className=\"head-cont\">important, </span> \r\n           <span className=\"head-cont\">and unique. </span> \r\n           <span className=\"head-cont\">Learn </span> \r\n           <span className=\"head-cont\">all </span> \r\n           <span className=\"head-cont\">about </span> \r\n           <span className=\"head-cont\">it here ...</span> \r\n             </p>\r\n          <a href=\"/anim\" className=\"button-large\">\r\n            \r\n           <span className=\"head-cont\">Go on, </span> \r\n           <span className=\"head-cont\">click me! </span> \r\n            </a>\r\n        </div>\r\n        <div style={{overflow:\"hidden\"}} className=\"col-6 col-12-medium imp-medium\">\r\n          {/* Banner Image */}\r\n          <button style={{margin:'0px 5px 5px 150px'}} className=\"bordered-feature-image head-cont-banner\"><motion.img className=\"hero head-cont-banner\" drag dragConstraints={{ top: -10,\r\n      left: -10,\r\n      right: 10,\r\n      bottom: 10,}} src={banner} alt=\"imag\" /></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Features.js",[],"C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Content.js",[],"C:\\Users\\Spark\\code\\anim\\client\\src\\components\\Footer.js",[],["48","49"],"C:\\Users\\Spark\\code\\anim\\client\\src\\components\\TwoColumnContent.js",[],"C:\\Users\\Spark\\code\\anim\\client\\src\\components\\TwoColLeft.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":26,"column":3,"nodeType":"56","endLine":26,"endColumn":40},{"ruleId":"54","severity":1,"message":"55","line":35,"column":5,"nodeType":"56","endLine":35,"endColumn":38},{"ruleId":"57","severity":1,"message":"58","line":3,"column":14,"nodeType":"59","messageId":"60","endLine":3,"endColumn":21},{"ruleId":"50","replacedBy":"61"},{"ruleId":"52","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Elastic' is defined but never used.","Identifier","unusedVar",["63"],["64"],"no-global-assign","no-unsafe-negation"]